module(
    name = "xla",
    version = "20240814.0-64bdcc5",
    compatibility_level = 1,
)

bazel_dep(name = "platforms", version = "0.0.8")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "rules_cc", version = "0.0.9")
bazel_dep(name = "rules_apple", version = "3.2.1", repo_name = "build_bazel_rules_apple")
bazel_dep(name = "rules_python", version = "0.29.0")
bazel_dep(name = "rules_proto", version = "6.0.0-rc1")
bazel_dep(name = "rules_java", version = "7.3.2")
bazel_dep(name = "rules_pkg", version = "0.9.1")
bazel_dep(name = "zlib", version = "1.2.13")
bazel_dep(name = "re2", version = "2024-02-01", repo_name = "com_googlesource_code_re2")
bazel_dep(name = "rules_license", version = "0.0.8")
bazel_dep(name = "stablehlo", version = "20240808.0-24d1807")
bazel_dep(name = "nsync", version = "1.29.2")
bazel_dep(name = "llvm-raw", version = "20240809.0-35f55f5")
bazel_dep(name = "protobuf", version = "21.7", repo_name = "com_google_protobuf")
bazel_dep(name = "abseil-cpp", version = "20240722.0", repo_name = "com_google_absl")
bazel_dep(name = "eigen", version = "3.4.90-20230801-66e8f3", repo_name = "eigen_archive")

llvm = use_extension("@llvm-raw//utils/bazel:extension.bzl", "llvm")
llvm.configure(
    targets = ["AArch64", "X86", "ARM"],
)
use_repo(llvm, "llvm-project")

tsl = use_extension("//:tsl.bzl", "tsl")
use_repo(tsl, "tsl")

xla_workspace_ext = use_extension("//:workspace.bzl", "xla_workspace_ext")
use_repo(
    xla_workspace_ext,
    "ml_dtypes",
    "pybind11_bazel",
    "snappy",
    "farmhash_archive",
    "rules_proto_grpc",
    "double_conversion",
    "io_bazel_rules_closure",
    "com_github_grpc_grpc",
    "local_config_cuda",
    "local_config_remote_execution",
    "local_config_rocm",
    "local_config_tensorrt",
)
